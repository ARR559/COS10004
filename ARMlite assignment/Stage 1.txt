sec_1:
      MOV R7, #Prompt
      STR R7, .WriteString
      PUSH {R0, R8}
      BL Print
      LDR R0, .LastKeyAndReset // looks the last input
      CMP R0, #82       //resets the stopwatch
      BEQ Reset
      CMP R0, #80       //pause if 'p' key way pressed
      BEQ pause
      LDR R8, 0x001a0   //loads memory 0x001a0 into R8
      ADD R8, R8, #1    // Adding value 1 into R8
      STR R8, 0x001a0   //Stores R8 into memory 0x001a0
      POP {R0, R8}
      LDR R8, 0x001a0
      CMP R8, #10       //compares R8 to value 10, if its true then it shifts to sec_tens branch
      BEQ Sec_10
      PUSH {R8, R4, R5, R6}
      LDR R8, .Time     //      current time
Clock:
      MOV R5, R8        //moving R8 value into R5
      LDR R4, .Time     //Loading current time  in R4
      SUB R6, R4, R5    //difference of previous and current time in R6
      CMP R6, #1 
      BLT Clock
      POP {R8, R4, R5, R6}
      B sec_1
Sec_10:                 //doing the tens place counting
      MOV R8, #0
      STR R8, 0x001a0
      LDR R8, 0x001a4
      ADD R8, R8, #1
      STR R8, 0x001a4 
      CMP R8, #6        //if it equals 6, the program is halted
      BEQ stop          //when the second tens place reaches 6, it will stop the program
      PUSH {R8, R4, R5, R6}
      LDR R8, .Time     //current time
      B Clock
Reset:                  //Resets the value of seconds to 00
      MOV R0, #0
      STR R0, 0X001a0
      MOV R0, #0
      STR R0, 0X001a4
      PUSH {LR}
      BL Print
      POP {LR}
      B pause
Print:                  //Printing the seconds 
      PUSH {R0}
      LDR R0, 0x001a4
      STR R0, .WriteUnsignedNum
      LDR R0, 0x001a0
      STR R0, .WriteUnsignedNum
      POP {R0}
      RET
pause:
      LDR R0, .LastKeyAndReset
      CMP R0, #82       //Reset when in the pause state
      BEQ Reset
      CMP R0, #80       //Resume the stopwatch
      BEQ sec_1
      B pause
stop:                   //stops the program when no condition matches to keep it going
      HALT
space: .asciz "\n"
Prompt: .ASCIZ " \n\n Press 'P' to pause/play the stopwatch \n Press 'R' to reset stopwatch \n "
